# SPDX-FileCopyrightText: Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
- name: "Verify"
  hosts: "all"
  vars:
    redis_server_service_name: "redis-server"
    redis_sentinel_service_name: "redis-sentinel"
    redis_server_port: 6379
    redis_sentinel_port: 26379
    redis_ports:
      - "{{ redis_server_port }}"
      - "{{ redis_sentinel_port }}"
    redis_password: "changeme"
  tasks:
    - name: "Populate service facts"
      ansible.builtin.service_facts:
      register: "services_state"

    - name: "Check that Redis is running on instance"
      ansible.builtin.assert:
        that:
          - "services_state.ansible_facts.services[redis_server_service_name + '.service'].state is search('running')"
          - "services_state.ansible_facts.services[redis_sentinel_service_name + '.service'].state is search('running')"

    - name: "Gather facts on listening ports."
      community.general.listen_ports_facts:

    - name: "Check if Redis is listening on TCP ports"
      vars:
        tcp_listen: "{{ ansible_facts.tcp_listen | selectattr('port', 'in', redis_ports) | list }}"
      ansible.builtin.assert:
        that:
          - "item.name == redis_server_service_name"
      loop: "{{ tcp_listen }}"

    - name: "Ensure Redis is in master mode"
      community.general.redis:
        command: "slave"
        slave_mode: "master"
        login_password: "{{ redis_password }}"

    - name: "Configure Redis maxmemory"
      community.general.redis:
        command: "config"
        name: "maxmemory"
        value: "0"
        login_password: "{{ redis_password }}"

...
