---
# This Playbook is basically this article: https://ubuntu.com/server/docs/how-to-install-and-use-openvpn
# but in Ansible format.
- name: Install and configure OpenVPN
  hosts: all
  become: true

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Install OpenVPN and easy-rsa
      ansible.builtin.apt:
        name:
          - openvpn
          - easy-rsa
        state: present
        cache_valid_time: 3600

  tasks:

    # - name: Create easy-rsa directory
    #   ansible.builtin.file:
    #     path: /etc/openvpn/easy-rsa
    #     state: directory
    #     owner: root
    #     group: root
    #     mode: '0700'

    # - name: Find all easy-rsa content
    #   ansible.builtin.find:
    #     paths: /usr/share/easy-rsa
    #     file_type: any
    #   register: easy_rsa_content

    # - name: Symlink easy-rsa files to /etc/openvpn/easy-rsa
    #   ansible.builtin.file:
    #     src: "{{ item.path }}"
    #     dest: "/etc/openvpn/easy-rsa/{{ item.path | basename }}"
    #     state: link
    #   with_items: "{{ easy_rsa_content.files }}"

    # - name: Copy easy-rsa vars file
    #   ansible.builtin.copy:
    #     src: easy_rsa_vars
    #     dest: /etc/openvpn/easy-rsa/vars
    #     owner: root
    #     group: root
    #     mode: '0600'

    - name: Create easy-rsa directory using make-cadir
      ansible.builtin.command:
        cmd: make-cadir /etc/openvpn/easy-rsa
        creates: /etc/openvpn/easy-rsa

    - name: Template out vars directory
      ansible.builtin.template:
        src: easy_rsa_vars.j2
        dest: "{{ easy_rsa_vars_path }}"
        owner: root
        group: root
        mode: '0600'

    - name: Initialise public key infrastructure
      ansible.builtin.command:
        cmd: ./easyrsa init-pki
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"
        # EASYRSA_REQ_CN: "{{ easy_rsa_req_cn }}"
        # EASYRSA_ALGO: "{{ easy_rsa_algo }}"
        # EASYRSA_DIGEST: "{{ easy_rsa

    - name: Build certificate authority
      ansible.builtin.command:
        cmd: ./easyrsa build-ca nopass
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/ca.crt"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"

    - name: Generate server keypair
      ansible.builtin.command:
        cmd: "./easyrsa gen-req {{ ansible_hostname }} nopass"
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/private/{{ ansible_hostname }}.key"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"

    - name: Generate Diffie Hellman parameters
      ansible.builtin.command:
        cmd: "./easyrsa gen-dh"
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/dh.pem"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"

    - name: Create server certificate
      ansible.builtin.command:
        cmd: "./easyrsa sign-req server {{ ansible_hostname }}"
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/issued/{{ ansible_hostname }}.crt"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"

    - name: Copy keys and certificates to /etc/openvpn
      ansible.builtin.copy:
        src: "{{ item }}"
        remote_src: true
        dest: /etc/openvpn/
        owner: root
        group: root
        mode: '0600'
      with_items:
        - "{{ easy_rsa_pki_path }}/dh.pem"
        - "{{ easy_rsa_pki_path }}/ca.crt"
        - "{{ easy_rsa_pki_path }}/issued/{{ ansible_hostname }}.crt"
        - "{{ easy_rsa_pki_path }}/private/{{ ansible_hostname }}.key"

    # Generate client certificates.
    # TODO: You'll need to grab pki/ca.crt and pki/issued/homemac.crt
    # to your local machine and configure them in your OpenVPN client.
    # Maybe make this a bit easier by putting them in a tarball
    # somewhere handy?
    - name: Generate client request
      ansible.builtin.command:
        cmd: "./easyrsa gen-req {{ item }} nopass"
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/reqs/{{ item }}.req"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"
      loop: "{{ client_names }}"

    - name: Generate client certificate
      ansible.builtin.command:
        cmd: "./easyrsa sign-req client {{ item }}"
        chdir: "{{ easy_rsa_path }}"
        creates: "{{ easy_rsa_pki_path }}/issued/{{ item }}.crt"
      environment:
        EASYRSA_VARS_FILE: "{{ easy_rsa_vars_path }}"
        EASYRSA_BATCH: "1"
      loop: "{{ client_names }}"

    - name: Template server configure
      ansible.builtin.template:
        src: server.conf.j2
        dest: /etc/openvpn/server.conf
        owner: root
        group: root
        mode: '0600'

    - name: Generate tls key
      ansible.builtin.command:
        cmd: openvpn --genkey --secret /etc/openvpn/ta.key
        creates: /etc/openvpn/ta.key

  post_tasks:
