---
# The Ansible equivalent of:
# knife ec2 server create --policy-group failover --policy-name primary-web-server
# -I ami-0fc5d935ebf8bc3bc --ssh-key standard -f t2.medium --connection-user ubuntu
# --ebs-size 32 --sudo --ssh-identity-file ~/.ssh/ec2.pem --security-group-id
# sg-245c9940 --associate-eip 34.206.218.126 --server-connect-attribute
# public_ip_address --subnet subnet-71b71628 --ebs-volume-type gp2
# --node-name cally --ssh-verify-host-key never

- name: Bootstrap AWS Instance
  hosts: all
  gather_facts: false
  vars:
  pre_tasks:
  roles:

  tasks:
    # This will find an existing instance by name, or create it if it
    # doesn't exist.
    - name: Start an instance and add EBS.
      connection: local
      amazon.aws.ec2_instance:
        name: "{{ instance_name }}"
        instance_type: t2.medium
        image_id: ami-0fc5d935ebf8bc3bc
        key_name: standard
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 32
              delete_on_termination: false
        security_group: sg-245c9940
        vpc_subnet_id: subnet-71b71628
      register: newinstance

    - name: Debug instance data
      connection: local
      ansible.builtin.debug:
        var: newinstance

    - name: Debug instance id
      connection: local
      ansible.builtin.debug:
        var: newinstance.instances[0].instance_id

    - name: Associate an elastic IP with an instance
      connection: local
      amazon.aws.ec2_eip:
        device_id: "{{ newinstance.instances[0].instance_id }}"
        ip: "{{ instance_eip }}"
